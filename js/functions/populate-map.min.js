import{jQuery as $}from"../jQuery/jquery3.4.1.js";import{L}from"../Leaflet/leaflet1.5.1.js";import{K}from"../K.js";import{createMarker}from"./create-marker.js";import{toCorrectType}from"./misc.js";export const populateMap=function(e,t){let o,p=K.extend(!0,{},K.layer[e.t]||{}),a=e.g,s=K.extend({},p.o||{},e.o||{},{creator:e.c,id:t,shape:a.t}),r=K.extend({},p.p||{},e.p||{});if((e.p||{}).content&&delete r.list,(e.p||{}).list&&delete r.content,s.iconUrl&&(s.iconUrl=s.iconUrl.replace("../","")),!s)return;if(K.each(s.mode,function(e,t){"array"===K.type(t)&&(s.mode[e]={})}),s.type||(s.type=""),s.type&&!K.has(s.type,K.map.group[s.group])&&K.map.group[s.group].push(s.type),s.type&&s.mode&&s.shape){let e=!1;if(K.user.type<1?s.type.contains("Complete")||"Error"==s.type||(e=!0):K.user.type<=3?s.type.contains(K.user.name)?e=!0:s.type.contains("Complete")||"Error"==s.type||(e=!0):K.user.type>=4&&(e=!0),e){let e=s.fillColor;"marker"==s.shape&&(e=s.iconUrl),"polyline"==s.shape&&(e=s.color),K.map.type.counts[s.type]?K.map.type.counts[s.type]++:K.map.type.counts[s.type]=1,K.each(K.modes.get,function(t,o){let p=s.category||"Default",a=K.map.type[o];a[p]||(a[p]={}),K.in(o,s.mode)&&(a[p][s.type]||(a[p][s.type]=[]),K.has(e,a[p][s.type])||(a[p][s.type].push(e),K.has(s.shape,["polygon","circle","rectangle"])&&a[p][s.type].push(s.color)))})}}for(p in s.mode in K.map.mode||(K.map.mode[s.mode]=[]),s.mode&&s.type&&!K.has(s.type,K.map.mode[s.mode])&&K.map.mode[s.mode].push(s.type),s)s[p]=toCorrectType(p,s[p]),"className"==p&&(s[p]=K.stripClasses(s[p])),K.settings.add(p,s[p],s.shape);let n=r.className?r.className:"";if(n&&!K.classRemoval.contains(n)&&(K.classRemoval=`${K.classRemoval.trim()} ${n}`),!K.classRemoval.contains(s.group)&&(K.classRemoval=`${K.classRemoval.trim()} ${s.group}`),"marker"!=a.t){let e=K.extend(s,{pane:s.pane||("poly-hover"==s.className?"zonePane":"overlayPane")});"circle"==a.t&&(e.radius=a.r),o=L[a.t](a.c,s)}else"marker"==a.t&&(o=createMarker(K.extend(s,{latlng:a.c})));if(5==K.user.type&&r.content&&"poly-info"!=r.className&&r.content.bMatch("<p")){console.log(t,r);let e=$("<div />").append(r.content),p={title:!1,subs:[]};e.children().each(function(){if("P"==$(this).prop("nodeName")&&""!=$(this).text()){let e={};e.value=$(this).text(),"HR"==$(this).next().prop("nodeName")&&(e.line=!0),$(this).hasClass("desc")&&(e.color=!0),$(this).hasClass("note")&&(e.note=!0),p.subs.push(e)}$(this).remove()}),p.title=$(e).text().trim(),delete r.content,r.list=p,o.saved(!1)}(r&&K.in("content",r)||K.in("list",r))&&(o.bindPopup(r),K.user.type&&K.settings.add("className",r.className,s.shape,!0));let l=!1;K.user.type<1?s.type.contains("Complete")||"Error"==s.type||(l=!0):K.user.type<=3?s.type.contains(K.user.name)?l=!0:s.type.contains("Complete")||"Error"==s.type||(l=!0):K.user.type>=4&&(l=!0),l&&K.group.addLayer(o),o.markComplete(),e.unsaved&&o.saved(!1);const c=K.local("copy")||{},i=K.settingShape(a.t);!c[i]&&s.type===K.map.defaults[i]&&o.copy(!1),"polyline"==a.t&&!c.polyline&&o.copy(!1),"marker"==s.shape&&s.type&&(K.tool.marker.add(o),K.icons[s.type.space()]=s.iconUrl);const m=s.level,y=K.level.layers;K.empty(m)||"number"!=K.type(m.btn)||"number"!=K.type(m.unit)||(!y[m.unit]&&(y[m.unit]={}),!y[m.unit][m.btn]&&(y[m.unit][m.btn]=[]),y[m.unit][m.btn].push(o))};
//# sourceMappingURL=populate-map.min.js.map
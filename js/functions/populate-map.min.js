import{jQuery as $}from"../jQuery/jquery3.4.1.js";import{L}from"../Leaflet/leaflet1.0.3.js";import{K}from"../K.js";import{createMarker}from"./create-marker.js";import{toCorrectType}from"./misc.js";export const populateMap=function(e,t){let o,a=K.extend(!0,{},K.layer[e.t]||{}),s=e.g,p=K.extend({},a.o||{},e.o||{},{creator:e.c,id:t,shape:s.t}),r=K.extend({},a.p||{},e.p||{});if((e.p||{}).content&&delete r.list,(e.p||{}).list&&delete r.content,p.iconUrl&&(p.iconUrl=p.iconUrl.replace("../","")),!p)return;if(K.each(p.mode,function(e,t){"array"===K.type(t)&&(p.mode[e]={})}),p.type||(p.type=""),p.type&&!K.has(p.type,K.map.group[p.group])&&K.map.group[p.group].push(p.type),p.type&&p.mode&&p.shape){let e=!1;if(K.user.type<1?p.type.contains("Complete")||"Error"==p.type||(e=!0):K.user.type<=3?p.type.contains(K.user.name)?e=!0:p.type.contains("Complete")||"Error"==p.type||(e=!0):K.user.type>=4&&(e=!0),e){let e=p.fillColor;"marker"==p.shape&&(e=p.iconUrl),"polyline"==p.shape&&(e=p.color),K.map.type.counts[p.type]?K.map.type.counts[p.type]++:K.map.type.counts[p.type]=1,K.each(K.modes.get,function(t,o){let a=p.category||"Default",s=K.map.type[o];s[a]||(s[a]={}),K.in(o,p.mode)&&(s[a][p.type]||(s[a][p.type]=[]),K.has(e,s[a][p.type])||(s[a][p.type].push(e),K.has(p.shape,["polygon","circle","rectangle"])&&s[a][p.type].push(p.color)))})}}for(a in p.mode in K.map.mode||(K.map.mode[p.mode]=[]),p.mode&&p.type&&!K.has(p.type,K.map.mode[p.mode])&&K.map.mode[p.mode].push(p.type),p)p[a]=toCorrectType(a,p[a]),"className"==a&&(p[a]=K.stripClasses(p[a])),K.settings.add(a,p[a],p.shape);let n=r.className?r.className:"";if(n&&!K.classRemoval.contains(n)&&(K.classRemoval=`${K.classRemoval.trim()} ${n}`),!K.classRemoval.contains(p.group)&&(K.classRemoval=`${K.classRemoval.trim()} ${p.group}`),"marker"==p.shape&&p.type){let e={o:K.extend({},p,{className:(p.className||"").replace(/\w+ground/g,"").trim()}),p:r||{}};K.each(K.modes.get,function(t,o){let a=K.tool.marker.layers[o];o in p.mode&&(p.category in a||(a[p.category]={}),p.type in a[p.category]||(a[p.category][p.type]=e),K.icons[p.type.space()]=e.o.iconUrl)})}if("marker"!=s.t){let e=K.extend(p,{pane:p.pane||("poly-hover"==p.className?"zonePane":"overlayPane")});"circle"==s.t&&(e.radius=s.r),o=L[s.t](s.c,p)}else"marker"==s.t&&(o=createMarker(K.extend(p,{latlng:s.c})));if(5==K.user.type&&r.content&&"poly-info"!=r.className&&r.content.bMatch("<p")){console.log(t,r);let e=$("<div />").append(r.content),a={title:!1,subs:[]};e.children().each(function(){if("P"==$(this).prop("nodeName")&&""!=$(this).text()){let e={};e.value=$(this).text(),"HR"==$(this).next().prop("nodeName")&&(e.line=!0),$(this).hasClass("desc")&&(e.color=!0),$(this).hasClass("note")&&(e.note=!0),a.subs.push(e)}$(this).remove()}),a.title=$(e).text().trim(),delete r.content,r.list=a,o.saved(!1)}(r&&K.in("content",r)||K.in("list",r))&&(o.bindPopup(r),K.user.type&&K.settings.add("className",r.className,p.shape,!0));let l=!1;K.user.type<1?p.type.contains("Complete")||"Error"==p.type||(l=!0):K.user.type<=3?p.type.contains(K.user.name)?l=!0:p.type.contains("Complete")||"Error"==p.type||(l=!0):K.user.type>=4&&(l=!0),l&&K.group.addLayer(o),o.markComplete(),e.unsaved&&o.saved(!1)};
//# sourceMappingURL=populate-map.min.js.map
import{jQuery as $}from"../jQuery/jquery3.4.1.js";import{L}from"../Leaflet/importer.js";import{K}from"../K.js";import{sortObjByKeys,removeEmpty,textColor,ID,polyType,switchLayerGroups,polyHoverAnimation,switchLayerGroup}from"../functions/misc.js";import{CodeMirror}from"../CodeMirror/importer.js";import{Huebee}from"../Utility/huebee.pkgd.js";K.tool.layer={join:!1,layer:{},new:{},element:null,shape:!1,modeSwitch:!1,setting:null,isPopup:!1,isOpen:function(){return!!$("#settings-menu").length},show:function(){K.tool.layer._show.call(K.tool.layer,this)},_show:function(t){console.log(`Editing layer with ID: ${t.options.id}`,t);let e=this;if(K.check.deleting||K.check.editing||!K.bar.b.power.enabled())return this;if(this.tags||(this.tags=[],K.each(K.icons,function(t){e.tags.push(t)}),this.tags.sort()),this._hide(),this.layer=t,this.shape=K.settingShape(t.options.shape),K.in("saved",t.editing)||(t.editing.saved=!0),t.makeBackup(),this.join){this.join._latlngs.push(t._latlngs[0]),this.new=L.polygon(this.join._latlngs,K.extend({},this.join.options,{pane:"poly-hover"==this.join.options.className?"zonePane":"overlayPane"}));let e=this.join.popup;return(e.content||e.list)&&this.new.bindPopup(e),K.group.removeLayer(this.join),K.group.removeLayer(t),K.group.addLayer(this.new),this.new.saved(!1),this.new.storeSettings(),this.join=!1,K.msg.hide(),this}if($(t["marker"!=t.options.shape?"_path":"_icon"]).addClass("leaflet-layer-editing"),$("body").append('<div id="settings-menu" class="settings-divider">\n            <div class="settings-side left"></div>\n            <div class="settings-side right"></div>\n        </div>'),$("#settings-menu").on("remove",function(){$(".leaflet-layer-editing").removeClass("leaflet-layer-editing")}).draggable({containment:"#map-id",start:function(){$(this).css({transform:"translate(0, 0)"})},stop:function(){this.position=K.extend({},$(this).position(),{transform:"translate(0, 0)"}),K.local("menuPos",this.position)},handle:".settings-title"}),this.position=K.local("menuPos")||!1,this.position){let t=$(window).width()-300,e=$(window).height()-515;this.position.left=t<this.position.left?t:this.position.left,this.position.top=e<this.position.top?e:this.position.top,$("#settings-menu").css(this.position)}$(".settings-side.left").append(`<div class="settings-tools marker">\n\t\t\t    <span class="settings-title">${t.options.shape.toUpperCase()}</span>\n\t\t\t</div>\n\t\t\t<div class="settings-tools popup">\n\t\t\t    <span class="settings-title">POPUP</span>\n\t\t\t</div>\n\t\t\t<div class="settings-tools buttons"></div>\n\t\t\t<div class="settings-tools save">\n                \x3c!-- <a class="settings-save button ripple-me" aria-label="save">CONFIRM</a> --\x3e\n                <a class="settings-cancel button ripple-me" aria-label="cancel">CANCEL</a>\n\t\t\t</div>\n\t\t\t<div class="creator">${t.options.creator}</div>\n            <div class="unsaved" ${t.editing.saved?'style="display: none"':""}>Save me!</div>`);let s=$('<a class="settings icon button ripple-me" />'),i=[{cls:"copy",title:"Copy these settings",action:function(){t.copy()}},{cls:"paste",title:"Paste copied settings",action:function(){e._paste()}},{cls:"copy-loc",title:"Copy this layers position",action:function(){t.copyLocation()}},{cls:"paste-loc",title:"Paste copied position",action:function(){e._pasteLocation()}},{cls:"edit"+(t.editing.edit?" end":""),title:"Add this to editable layer",action:function(){e._edit()}},{cls:"move"+(t.dragging.enabled()?" end":""),title:"Drag this layer",action:function(){e._move()}},{cls:"join",title:"Make another polygon a hole in this",type:["polygon"],action:function(){e._join()}},{cls:"split",title:"Split these polygons",type:["polygon"],action:function(){e._split()}},{cls:"dupe",title:"Duplicate this poly",type:["polygon"],action:function(){e._dupe()}},{cls:"delete",title:"Delete this layer",action:function(){e._delete()}},{cls:"to-type",title:"Copy selected setting to all of Type",action:function(){e._toType()}}];for(let t in i){const e=i[t];!e.cls||e.type&&!K.has(this.shape,e.type)||s.clone().attr({"aria-label":e.cls,title:e.title}).addClass(e.cls).appendTo(".settings-tools.buttons").on("click",e.action)}this.updateSaved();let n=t.options.shape;K.each(K.settings.main,function(t,e){K.has(n,e.for)&&$("<a />",{class:"dnt settings-item button ripple-me "+t,setting:t,html:t.firstToUpper().space()}).appendTo(".settings-tools.marker")}),K.each(K.settings.popup,function(t){$("<a />",{class:"dnt settings-item button ripple-me "+t,setting:t,popup:!0,html:t.firstToUpper().space()}).appendTo(".settings-tools.popup")}),$(".settings-item").on("click",function(){e.element=$(this),e.setting=t.editing.window=$(this).attr("setting"),e.isPopup=$(this).attr("popup"),e._settingClick()}),$(".settings-cancel").on("click",function(){e._cancel()}),$(".settings.paste").on("mouseover",function(){e._pasteOver(t)}).on("mouseout",function(){e._pasteOut(t)}),K.in("_latlngs",t)&&1==t._latlngs.length?$(".settings.split").hide():$(".settings.split").on("click",function(){e._split()}),t.editing.window&&$(`.settings-item[setting="${t.editing.window}"]`).trigger("click"),$('.settings.icon[title!=""]').qtip({position:{viewport:$("#map-id"),my:"bottom left",at:"top center"},style:{classes:"tooltip-style"},show:{event:"mouseenter",delay:250,solo:!0},hide:{event:"click mouseleave"}});let o=L.DomUtil.get("settings-menu");return L.DomEvent.disableClickPropagation(o),L.DomEvent.on(o,"mousewheel",L.DomEvent.stopPropagation),this},_settingClick:function(){let t,e,s,i,n=this,o=this.layer,a=this.setting,l=this.isPopup,p=K.settings[l?"popup":"main"],c=[];if(!a)return;o.editing.window=a,K.in("values",p[a])&&(c=sortObjByKeys(p[a].values));let r=o.options[a];l&&(r=o.popup?o.popup[a]:""),$(".settings-side.right").html(`<div class="settings-tools right-bar" aria-label="${a}">\n\t\t\t    <span class="settings-title">${l?"POPUP ":""}${a.space().toUpperCase()}</span>\n            </div>`),K.has(a,["id"])||($(".right .settings-title").after(`<a class="settings icon copy inline ripple-me" title="Copy this setting" \n                setting="${a}" which="${l?"popup":"icon"}"></a>`),$(".right .settings-title").after(`<a class="settings icon paste inline ripple-me" title="Paste this setting" \n                setting="${a}" which="${l?"popup":"icon"}"></a>`),$(".settings.copy.inline").on("click",function(){n._copySingle()}),$(".settings.paste.inline").on("click",function(){n._pasteSingle()}));let h=$(".settings-tools.right-bar");if(h.parent().removeClass("code"),K.length(o.options.mode)>1&&!K.has(a,["mode","id","category","type","time","link","group","prerequisites","onComplete"])){const t=o.getMode(l);let s=!1;K.in(a,t)&&(s=!0),s&&(r=o.getModeSetting(a,l));const i=$("<div />",{class:"mode-container edit"}),p=$("<span />",{class:"name",html:"Modify for mode:"}),c=["This will modify this setting for the original layer, no changes will be made to any modified modes.",`This will modify this setting for ${K.mode} only, no changes will be made to the original layer.\nSwitching this with changes already made will delete any changes for ${K.mode}.`],u=$("<span />",{class:"help",html:c[+s]});e=$('<label class="switch ripple-me">\n                <span class="label"></span>\n                <span class="back"></span>\n                <input type="checkbox" class="settings-item mode-switch check">\n                <span class="slider"></span>\n            </label>'),h.append(i.append(p).append(e).append(u)),$("input",e).prop("checked",s).on("change",function(){s=$(this).is(":checked"),u.text(c[+s]),s||(K.in(a,t)&&delete t[a],n.modeSwitch=!0,n._settingClick(),y()),d()})}p[a].description&&h.append(`<span class="help">${p[a].description}</span>`);const d=function(){const t=$(".settings-side .right-bar");let e,s=0,i=8;$(".settings-side.left .settings-tools:not(.buttons)").each(function(){i+=$(this).outerHeight()}),$("> div:not(.scroll-box):not(.CodeMirror-wrap):visible, > span, > input",t).each(function(){s+=$(this).outerHeight()}),(e=$(".scroll-box",t)).length?e.css("max-height",i-s+"px"):(e=$(".CodeMirror-wrap",t)).length?e.css("height",i-s+"px"):(e=$("textarea",t)).length&&e.css("height",i-s+"px")},u=function(){$(".right-bar .list-box").remove(),$(".settings-tools.right-bar").append('<div class="scroll-box list-box">\n\t\t\t\t    <div class="section title">\n                        <span class="header">TITLE</span><br>\n                        <input type="text" class="settings-item input list" name="list-title" role="input" setting="list-title" which="popup" placeholder="Title">\n                    </div>\n                    <div class="section subs">\n                        <a class="add subs button ripple-me" title="Add another paragraph">+</a>\n                        <span class="header">PARAGRAPH</span>\n                        <br>\n                    </div>\n                    <div class="section list">\n                        <a class="add list button ripple-me" title="Add another item">+</a>\n                        <span class="header">LIST</span>\n                        <br>\n                    </div>\n\t\t\t\t</div>'),t=$("<div />",{class:"setting-container clone",num:0}),s=$("<input />",{type:"text",class:"settings-item input list",which:"popup"}),e=$('<label class="switch ripple-me">\n                <span class="label"></span>\n                <span class="back"></span>\n                <input type="checkbox" class="settings-item input list check">\n                <span class="slider"></span>\n            </label>');let i,o=t.clone().addClass("subs").appendTo(".section.subs");s.clone().attr({name:"list-sub",num:0,placeholder:"Paragraph"}).appendTo(o),$("<br>").appendTo(o),(i=e.clone().appendTo(o)).find("input").attr({name:"list-sub-class",cat:"color",num:0}),i.find(".label").text("Color:"),(i=e.clone().appendTo(o)).find("input").attr({name:"list-sub-class",cat:"line",num:0}),i.find(".label").text("Line:"),i.find(".slider").addClass("note"),(i=e.clone().appendTo(o)).find("input").attr({name:"list-sub-class",cat:"note",num:0}),i.find(".label").text("Note:"),i.find(".slider").addClass("note"),o=t.clone().addClass("list").appendTo(".section.list"),s.clone().attr({name:"list-item",num:0,placeholder:"Item",autocomplete:!0}).autocomplete({source:n.tags,autoFocus:!0,appendTo:"#settings-menu"}).appendTo(o),s.clone().attr({type:"number",min:1,name:"list-qty",num:0,placeholder:"Qty"}).appendTo(o)},g=function(t){const e=$(t).clone(),s=+e.attr("num")+1;return e.attr("num",s),$("input",e).each(function(){$(this).attr("num",s),"checkbox"==$(this).attr("type")?$(this).prop("checked",!1):$(this).val(""),$(this).attr("autocomplete")&&$(this).autocomplete({source:n.tags,autoFocus:!0,appendTo:"#settings-menu"})}),$(t).removeClass("clone").parent().append(e),e},m=function(t){K.empty(t)||(t.title&&$("[setting=list-title]").val(t.title),K.empty(t.subs)&&(t.subs=[]),K.each(t.subs,function(t,e){const s=".subs.clone";let i=$(s);t&&(i=g(s)),$("input[name=list-sub]",i).val(e.value),$("input[cat=color]",i).prop("checked",e.color),$("input[cat=note]",i).prop("checked",e.note),$("input[cat=line]",i).prop("checked",e.line)}),K.empty(t.list)&&(t.list=[]),K.each(t.list,function(t,e){const s=".list.clone";let i=$(s);t&&(i=g(s)),$("input[name=list-item]",i).val(e.item),$("input[name=list-qty]",i).val(e.qty)}))};if(K.user.type>3&&!K.in(a,["id"])){$(".settings-tools.right-bar").append('<div class="restore-container hide">\n                    <div class="restore-back img ripple-me"></div>\n                    <span class="restore-text">Current</span>\n                    <div class="restore-forward img ripple-me"></div>\n                </div>');const t=$(".restore-container"),e=$(".restore-back",t),s=$(".restore-forward",t),n=$(".restore-text",t);let p,h;$.ajax({type:"POST",url:"php/get_restore.php",data:{id:o.options.id,setting:a,type:l?"p":"o"}}).done(function(s){h=$.parseJSON(s),K.each(h,function(t,e){K.equals(e,r)&&delete h[t]}),K.empty(h)||(t.removeClass("hide"),e.addClass("enabled"),h.Current=r,p=K.length(h)-1,d())}),t.on("click",".enabled",function(){const t=Object.keys(h)[$(this).hasClass("restore-back")?--p:++p],l=h[t];0==p?(e.removeClass("enabled"),s.addClass("enabled")):p==K.length(h)?(s.removeClass("enabled"),e.addClass("enabled")):(s.addClass("enabled"),e.addClass("enabled")),n.text(t),"list"==a?(u(),m(l),f(),y.call($("[name=list-title]"))):"mode"==a?(o.applySetting({setting:"mode",value:"object"!=K.type(l)?{}:l}),$(".mode-container .input.mode").each(function(){const t=$(this).attr("mode");$(this).prop("checked",K.has(t,o.options.mode));const e=$(this).parents(".mode-container");e.removeClass("changes"),!K.empty(o.options.mode[t])&&e.addClass("changes")})):"link"==a?($(".setting-container.links").each(function(){0==$("input",this).attr("num")?$("input",this).val(""):$(this).remove()}),"array"==K.type(l)&&K.each(l,function(t,e){t&&$(".add.links").trigger("click"),$(`input[num=${t}]`).val(e)})):K.length(c)?$(`[aria-label="${l}"]`).trigger("click"):(y.call($("textarea.input").text(l)),i&&i.setValue(l))})}if("list"===a)u(),"object"!=K.type(r)&&(o.popup.list={},r={}),m(r),$(".settings-side.right").off("click",".list-box a.add").on("click",".list-box a.add",function(){let t=!1,e=$(this).hasClass("subs")?".subs.clone":".list.clone";g(e),$(` ${e.replace(".clone","")} input[type=text]`).each(function(){$(this).val()||t||($(this).focus(),t=!0)}),f()});else if(K.in(a,["link","prerequisites","cycle"])){$(".settings-tools.right-bar").append('<div class="scroll-box">\n                    <div class="section links">\n                        <a class="add links button ripple-me" title="Add another paragraph">+</a>\n                        <span class="header">IDS</span><br>\n                    </div>\n\t\t\t\t</div>'),r||(r=[""]),t=$("<div />",{class:"setting-container links"}),s=$("<input />",{name:"list-link",type:"text",class:"settings-item input link",setting:a,placeholder:"Layer ID"});let e=$("<a />",{class:"settings-item link grab ripple-me"}),i=$("<a />",{class:"settings-item link trash ripple-me"});K.each(r,function(n,o){let a=t.clone().appendTo(".section.links");s.clone().attr({value:o,num:n}).appendTo(a),e.clone().attr({num:n}).appendTo(a),i.clone().attr({num:n}).appendTo(a)}),$("a.add").on("click",function(){let n=!1,o='input[name="list-link"]',a=$(o).length,l=t.clone().appendTo(".section.links");s.clone().attr({num:a}).appendTo(l),e.clone().attr({num:a}).appendTo(l),i.clone().attr({num:a}).appendTo(l),$(o).each(function(t,e){$(e).val()||n||($(e).focus(),n=!0)}),f()}),$(".section.links").on("click",".trash",function(){1==$(".section.links input").length?$(".section.links input").val(""):($(`.section.links [num=${$(this).attr("num")}]`).parent().remove(),$(".setting-container").each(function(t){$("[num]",this).attr("num",t)})),y.call(this)}),$(".section.links").on("click",".grab",function(){K.check.grabbing=!0;let t=$(this).attr("num"),e=K.group.feature[K.mode].everyLayer,s=this;e.eachLayer(function(i){i.off("click"),i.on("click",function(){$(`.section.links .input[num=${t}]`).val(this.options.id),y.call(s),K.check.grabbing=!1,e.eachLayer(function(t){t.off("click")})}),K.msg.show({msg:"Select the layer you would like to link to this.",time:2e3})})})}else if("mode"===a){const t=$("<div />",{class:"mode-container"}),s=$("<span />",{class:"name"});e=$('<label class="switch ripple-me">\n                <span class="label"></span>\n                <span class="back"></span>\n                <input type="checkbox" class="settings-item input mode check">\n                <span class="slider"></span>\n            </label>'),K.each(K.modes.get,function(i,n){const a=t.clone().appendTo(h);s.clone().text(n).appendTo(a);const l=e.clone().appendTo(a);$("input",l).prop("checked",K.has(n,o.options.mode)).attr("mode",n),K.has(n,o.options.mode)&&!K.empty(o.options.mode[n])&&a.addClass("changes")})}else if(K.length(c)){"className"!==a||l||(r=K.stripClasses(r)),h.append(`<input type="text" class="settings-item input ${a}" name="${a}" \n                role="input" value="${r||""}" setting="${a}" which="${l?"popup":"icon"}">`);let t,e,s=1,i='<div class="scroll-box">',n=[];K.each(c,function(l,p){if("type"==a&&!K.has(K.settingShape(o.options.shape),p.shape))return;if(t="string"==K.type(l)&&l.contains(".svg"),e="string"==K.type(l)&&l.contains("#"))return n.push(l),!0;let h='<div class="settings-icons">';i+=`${t&&1==s?h:""}\n                    < a class = "settings-item button ripple-me selector${e?" color":t?" icon":""}"\n                    aria - label = "${l}"\n                    role = "button"\n                        ${r==l?` style="background-color: #2f474e; ${e?` color: ${l};`:""}"`:e?` style="color: ${l};"`:""}>\n                        ${t?`<img src="${l}" height="30" width="30">`:l} \n                    </a>\n                    ${t&&s==c.length?"</div>":t&&s%3==0?'</div><div class="settings-icons">':""}`,s++}),i=$(i+"</div>"),t&&i.addClass("has-icons"),h.append(i),$.unique(n),n.sort(),e&&new Huebee($(".settings-item.input")[0],{notation:"hex",hues:16,shades:8,saturations:5,customColors:n,staticOpen:!0}).on("change",function(){$(".settings-item.input").trigger("change")})}else h.append(`<textarea type="text" rows=2 cols=20 wrap="hard" class="settings-item input ${a}" name="${a}" setting="${a}" which="${l?"popup":"icon"}"${"id"==a?" readonly":""}>${r||""}</textarea>`),K.in(a,["html","content"])&&(h.parent().addClass("code"),(i=CodeMirror.fromTextArea($(`textarea.${a}`)[0],{lineNumbers:!0,mode:"htmlmixed",indentUnit:4,theme:"one-dark",indentWithTabs:!0,showCursorWhenSelecting:!0,autoCloseBrackets:!0,autoCloseTags:!0,lineWrapping:!0})).on("change",function(){$("textarea.input").text(i.getValue()).trigger("input")}));const y=function(){const t=$(".settings-item.input"),e=$(".mode-switch"),s={setting:t.attr("setting"),value:t.val(),forMode:e.length&&e.is(":checked")};if($(this).hasClass("list"))s.setting="list",s.value={},s.value.title=$('.input[name="list-title"]').val(),s.value.subs=[],$('.input[name="list-sub"]').each(function(){let t=$(this).val();if(!t)return!0;let e=$(this).parent(),i=e.find("[cat=color]").is(":checked"),n=e.find("[cat=line]").is(":checked"),o=e.find("[cat=note]").is(":checked"),a={value:t};i&&(a.color=i),n&&(a.line=n),o&&(a.note=o),s.value.subs.push(a)}),s.value.list=[],$('.input[name="list-item"]').each(function(){let t=$(this).attr("num"),e=$(this).val();if(!e)return!0;s.value.list.push({item:e,qty:$(`.input[name="list-qty"][num="${t}"]`).val()||1})}),removeEmpty(s.value);else if($(this).hasClass("link"))s.value=[],$("[name=list-link]").each(function(){let t=$(this).val();t&&s.value.push(t)}),removeEmpty(s.value);else if($(this).hasClass("mode"))s.setting="mode",s.value=o.backup.options.mode||o.options.mode||{},$("input",h).each(function(){const t=$(this).attr("mode");$(this).is(":checked")?t in s.value||(s.value[t]={}):delete s.value[t]});else if("className"==s.setting&&!l){let t=K.in("popup",o)&&K.in("className",o.popup)?o.popup.className:"";s.value+=` ${o.options.group} ${t}`}l&&o.updatePopup(s),!l&&o.applySetting(s)};$(".settings-item.selector").on("click",function(){let t=$(".settings-item.input");if($(this).hasClass("color")){let e=$(this).attr("aria-label");t.css({"background-color":e,color:textColor(e)})}$(".settings-side.right a:not(.settings-apply)").css("background-color","#24373d"),$(this).css("background-color","#2f474e"),t.val($(this).attr("aria-label")),y.call(this)});const f=function(){$(".input").each(function(){if($(this).prop("readonly"))return;let t=$(this),e={text:"propertychange change focus input paste",number:"propertychange change focus input paste",checkbox:"change"},s=$(this).attr("type");t.data("oldVal",t.val()),t.unbind(e[s]),t.bind(e[s],function(){let e=$(this).hasClass("check");if(!e&&t.data("oldVal")==t.val())return;!e&&t.data("oldVal",t.val());let s=$('input[name="list-title"]');if(s.removeClass("incorrect"),s.val()||s.addClass("incorrect"),e){let t=$(this).parent("label").prev("input");t.removeClass("gray"),$(this).is(":checked")&&t.addClass("gray")}y.call(this)})})};return f(),d(),$('.inline.icon[title!=""]').qtip({position:{viewport:$("#map-id"),my:"right center",at:"left center"},style:{classes:"tooltip-style"},show:{event:"mouseenter",delay:250,solo:!0},hide:{event:"click mouseleave"}}),this.modeSwitch&&y(),this.modeSwitch=!1,this},_cancel:function(){this._hide();let t=this.layer,e=t.options,s=t.backup;K.extend(!0,e,s.options),s.popup&&(t.unbindPopup(),t.bindPopup(s.popup)),"marker"==e.shape?(t.setLatLng(s.pos.latlng),t.updateIcon()):K.has(e.shape,["polyline","polygon"])?(t.setLatLngs(s.pos.latlngs),t.setStyle(e)):"circle"==e.shape&&(t.setLatLng(s.pos.latlng),t.setRadius(s.pos.radius)),K.complete.is(t)&&K.complete.add(t),t.storeSettings(),t.saved(!0)},_copySingle:function(){const t=K.local("copySingle")||{},e=this.layer,s=this.isPopup,i=this.setting,n=e[s?"popup":"options"][i];if(K.empty(n))return K.msg.show({msg:"Copy failed!",time:2e3}),this;const o=s?"p":"o";return K.in(o,t)||(t[o]={}),t[o][i]=n,K.local("copySingle",t),K.msg.show({msg:"Setting copied!",time:2e3}),this},_paste:function(){let t=this.layer,e=(K.local("copy")||{})[K.settingShape(t.options.shape)]||!1;e?(K.each(e.o,function(e,s){t.applySetting({setting:e,value:s})}),K.each(e.p,function(e,s){t.updatePopup({setting:e,value:s})}),K.msg.show({msg:"Settings pasted!",time:2e3}),this._settingClick()):K.msg.show({msg:"You need to copy something first!",time:2e3})},_pasteLocation:function(){let t=this.layer,e=(K.local("location")||{})[t.options.shape]||!1;e?(t.setLatLng&&t.setLatLng(e),t.setLatLngs&&t.setLatLngs(e),K.msg.show({msg:"Position pasted!",time:2e3})):K.msg.show({msg:"You need to copy a position first!",time:2e3})},_pasteSingle:function(){const t=K.local("copySingle")||{},e=this.layer,s=this.isPopup,i=$(".mode-switch"),n=s?"p":"o",o={setting:this.setting,forMode:!!i.length&&i.is(":checked")};K.in(n,t)&&K.in(this.setting,t[n])?(o.value=t[n][this.setting],s&&e.updatePopup(o),!s&&e.applySetting(o),this._settingClick()):K.msg.show({msg:"There is no copied setting!",time:2e3})},_pasteOver:function(){let t,e=this.layer,s=K.settingShape(e.options.shape);"marker"!=e.options.shape&&e.makeBackup().setStyle(K.extend(e.options,t=K.local("copy")&&K.in(s,t)&&t[s]||{}))},_pasteOut:function(){const t=this.layer;"marker"!=t.options.shape&&t.setStyle(K.extend(t.options,t.paste.options))},_delete:function(){let t=this;this._hide(),$("<div />",{class:"screen-blank",html:$("<div />",{class:"confirm",html:$("<div />",{class:"message",html:"Are you sure you want to delete this layer?"})})}).appendTo("body"),$("<a />",{class:"button no ripple-me",title:"Cancel",html:"Cancel"}).appendTo(".confirm").on("click",function(){$(".screen-blank").remove()}),$("<a />",{class:"button yes ripple-me",title:"Delete",html:"Delete"}).appendTo(".confirm").on("click",function(){t._trueDelete.call(t),$(".screen-blank").remove()})},_trueDelete:function(){this.layer.delete()},_toType:function(){const t=this.layer,e=this.isPopup,s=this.setting;if(!s||!t.options.type||"type"==s)return;const i=$(".mode-switch"),n={setting:s,value:K.getSetting(t[e?"popup":"options"],s),forMode:i.length&&i.is(":checked")},o=K.layer[t.options.type],a=e?"p":"o";o.changed=!0,!K.in(a,o)&&(o[a]={}),n.forMode?(!K.in("mode",o[a])&&(o[a].mode={[K.mode]:{}}),!K.in(a,o[a].mode[K.mode])&&(o[a].mode[K.mode][a]={}),o[a].mode[K.mode][a][s]=n.value):o[a][s]=n.value,K.each(K.group.mode,function(s,i){K.each(i._layers,function(s,i){i.options.type==t.options.type&&(e?i.updatePopup(n):i.applySetting(n))})}),K.msg.show({msg:"Setting copied to all "+t.options.type.space(),time:2e3})},_dupe:function(){this._hide();let t=this.layer,e=K.extend({},t.options,{id:ID()}),s=t._latlngs,i=polyType(s);"circle"==t.shape?((s=t._latlng).lng-=1e-6,s.lng-=1e-6):K.has(i,["polygon","polyline"])?("polygon"==i&&(s=s[0]),s.splice(1,0,L.latLng((s[0].lat+s[1].lat)/2,(s[0].lng+s[1].lng)/2))):(s[0][0].lng-=1e-6,s[0][1].lng-=1e-6),this.new="circle"==t.shape?L.circle(t._latlng,K.extend(e,{radius:t._mRadius})):L[i](t._latlngs,e),K.group.addLayer(this.new),this.new.on("click",this.show),this.new.saved(!1),switchLayerGroups(),polyHoverAnimation(),K.msg.show({msg:"Duplicated",time:2e3})},_join:function(){let t=this.layer;this.join=t,t.off("click").bringToBack(),this._hide(),K.msg.show({msg:"Select the shape to join!",time:3e3})},_move:function(){let t=K.tool.layer.layer;t.dragging.enabled()?(t.dragging.disable(),$(".settings.icon.move").removeClass("end")):(t.dragging.enable(),$(".settings.icon.move").addClass("end"),t.on("dragend",function(){this.saved(!1)}))},_edit:function(){let t=K.tool.layer.layer;t.editing.edit=!t.editing.edit,$(".settings.icon.edit").toggleClass("end"),switchLayerGroups()},_split:function(){this._hide();let t,e=this.layer,s=this.show;K.each(e._latlngs,function(i,n){const o=K.extend({},e.options,{id:ID()});t=L[polyType([n])]([n],o),K.group.addLayer(t),t.on("click",s),t.saved(!1)}),K.group.removeLayer(e),switchLayerGroups(),polyHoverAnimation()},_hide:function(){$("#settings-menu").remove()},_refresh:function(){K.tool.layer._hide(),K.tool.layer._show.call(K.tool.layer,K.tool.layer.layer)},updateSaved:function(){!this.layer.editing.saved||this.layer.backup&&this.layer.backup.changes?($(".settings-save").css("background-color","#735711"),$(".unsaved").show()):($(".settings-save").css("background-color","#24373d"),$(".unsaved").hide())}},L.Layer.include({tools:K.tool.layer,backup:!1,makeBackup:function(){let t=this.backup?"paste":"backup";return this.oldType=this.options.type,this[t]={},this[t].options=K.reduce({},this.options,K.map.property[this.options.shape]),this.popup&&(this[t].popup=K.extend({},this.popup)),"backup"==t&&(K.has(this.options.shape,["polygon","polyline"])?this.backup.pos={latlngs:L.LatLngUtil.cloneLatLngs(this.getLatLngs())}:"marker"==this.options.shape?this.backup.pos={latlng:L.LatLngUtil.cloneLatLng(this.getLatLng())}:"circle"==this.options.shape&&(this.backup.pos={latlng:L.LatLngUtil.cloneLatLng(this.getLatLng()),radius:this._mRadius})),this},applySetting:function(t){const e=K.extend({setting:void 0,value:void 0,skipSave:!1,forMode:!1},t),s=this.options.group;!this.backup&&!e.skipSave&&this.makeBackup(),"type"==e.setting&&(this.oldType=this.options.type);let i=!!e.forMode&&this.getMode();const n=this.getModeSettingPath(e.setting);if(!e.forMode&&null!==n&&delete n[e.setting],"marker"==this.options.shape&&K.has(e.setting,["className","iconUrl","iconSize","html"])){let t=this.options;e.value="string"==K.type(e.value)&&e.value.bMatch(/\d+,\d+/)?e.value.split(","):e.value,!i&&(t[e.setting]=e.value),i&&(i[e.setting]=e.value),this.updateIcon(),K.complete.is(this)&&K.complete.add(this)}else i?i[e.setting]=e.value:this.options[e.setting]=e.value;"group"==e.setting&&switchLayerGroup(this,s),"marker"!=this.options.shape&&this.setStyle(this.options);const o=this.options.type;if(o!=this.oldType&&(K.map.type.add(o),K.map.type.remove(this.oldType)),o!=this.oldType&&K.in(o,K.layer)){this.oldType=o;const t=this;K.each(K.curtail({},K.layer[o].o,["type","shape"]),function(s,i){t.applySetting({setting:s,value:i,forMode:e.forMode})}),K.layer[o].p&&K.each(K.layer[o].p,function(s,i){t.updatePopup({setting:s,value:i,forMode:e.forMode})}),K.layer[o].p||(this.unbindPopup(),this.popup=void 0)}return K.empty(this.options.mode)&&(this.options.mode={[K.mode]:{}}),this.storeSettings(),!e.skipSave&&this.saved(!1),this},getMode:function(t){const e=this.options.mode[K.mode],s=t?"p":"o";return!K.in(s,e)&&(e[s]={}),e[s]},getModeSetting:function(t,e,s=K.mode){if(!this.options.mode)return null;const i=this.options.mode[s],n=e?"p":"o";return K.in(n,i)&&K.in(t,i[n])?i[n][t]:null},getModeSettingPath:function(t,e){const s=this.options.mode[K.mode],i=e?"p":"o";return K.in(i,s)&&K.in(t,s[i])?s[i]:null},getSetting:function(t,e){const s=(e?this.popup:this.options)||{};let i=this.getModeSetting(t,e);return"complete"!=t&&this.complete&&"toStoryMode"==this.options.onComplete&&(i=this.getModeSetting(t,e,"Story Mode")),null!==i?i:s[t]},updatePopup:function(t){const e=K.extend({setting:void 0,value:void 0,forMode:!1},t);this.backup||this.makeBackup();const s=this.getModeSettingPath(e.setting,!0);return!e.forMode&&null!==s&&delete s[e.setting],!this.popup&&(this.popup={}),!e.forMode&&(this.popup[e.setting]=e.value),e.forMode&&(this.getMode(!0)[e.setting]=e.value),this.unbindPopup(),this.hasPopupContent()&&this.bindPopup(this.popup),this.storeSettings(),this.saved(!1),this},hasPopupContent:function(){return!!this.popup&&(this.getSetting("content",!0)||!K.empty(this.getSetting("list",!0)))},storeSettings:function(){const t=K.map.type.counts,e=this.options.type;if(1==t[e]){!(e in K.layer)&&(K.layer[e]={});const s=K.layer[e],i=this.options;if("marker"==i.shape&&(i.iconUrl&&delete i.html,!i.iconUrl&&delete i.iconUrl),s.o=K.reduce({},i,K.map.property[this.options.shape]),K.in("link",s.o)&&delete s.o.link,s.changed=!0,this.popup){const t=this.popup;s.p={className:t.className},!K.empty(t.list)&&(s.p.list=t.list),!s.p.list&&(s.p.content=t.content)}0==t[this.oldType]&&(delete K.layer[this.oldType],delete K.map.type.counts[this.oldType])}return this},saved:function(t){let e=K.tool.layer;return this.editing.saved=t,!this.backup&&this.makeBackup(),this.backup.changes=!t,t?(K.save.remove(this),delete this.backup):K.save.add(this),e.isOpen()&&e.updateSaved(),this},delete:function(){K.map.type.remove(this.options.type),K.save.delete(this)},copy:function(){let t=K.local("copy")||{};return t[K.settingShape(this.options.shape)]={o:K.reduce({},this.options,K.map.property[this.options.shape]),p:!!this.popup&&this.popup},K.local("copy",t),K.msg.show({msg:"Settings copied!",time:2e3}),this},copyLocation:function(){let t=K.local("location")||{};return t[this.options.shape]=this._latlng||this._latlngs,K.local("location",t),K.msg.show({msg:"Position copied!",time:2e3}),this}});
//# sourceMappingURL=layer.min.js.map
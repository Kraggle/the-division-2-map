import{jQuery as $}from"../jQuery/jquery3.4.1.js";import{K}from"../K.js";import{sortObjByKeys,timed}from"../functions/misc.js";K.tool.marker={timer:timed(),layers:{},clear:function(){this.layers={}},fill:function(){K.empty(this.layers)&&K.each(K.modes.get,(e,t)=>{this.layers[t]={}})},add:function(e){this.fill();const t=e.options,o=e.popup;K.each(K.modes.get,(e,i)=>{const s=this.layers[i];i in t.mode&&(K.in(t.category,s)||(s[t.category]={}),K.in(t.type,s[t.category])||(s[t.category][t.type]={o:K.extend({},t,{className:(t.className||"").replace(/\w+ground/g,"").trim()}),p:o||{}}))}),this.refresh()},remove:function(e,t){!K.map.type.counts[t]&&K.each(K.modes.get,(o,i)=>{const s=this.layers[i];K.in(e,s)&&K.in(t,s[e])&&delete s[e][t]}),this.refresh()},refresh:function(){this.timer.run(()=>{this.enabled()&&$("#marker-tools").remove()&&this.show()},500)},enabled:function(){return!!$("#marker-tools").length},show:function(){let e="boolean"==K.type(arguments[0])&&arguments[0];K.tool.marker._show.call(K.tool.marker,e)},_show:function(e){if(this.enabled()){if(e)return;return void $("#marker-tools").remove()}$("body").append('<div id="marker-tools" class="marker-panel"></div>');const t=$("#marker-tools");t.append('<div class="outer inputs">\n                <div class="switch ripple-me">\n                    <input name="switch" id="_2" type="radio" name="radio" value=-1>\n                    <label for="_2" class="label down" title="Underground">Below</label>\n                    <input name="switch" id="_1" type="radio" name="radio" value=0 checked>\n                    <label for="_1" class="label level" title="Ground Level">Ground</label>\n                    <input name="switch" id="_3" type="radio" name="radio" value=1>\n                    <label for="_3" class="label up" title="Overground">Above</label>\n                    <div class="indicator"></div>\n                </div>\n                \n                <div class="floor-inputs">\n                    <input type="number" class="build" placeholder="Building No." id="build-no"/>\n                    <input type="number" class="btn-no" placeholder="Button No." id="button-no"/>\n                </div>\n\t\t\t</div>\n            <div class="outer scroller">\n                <div class="icons"></div>\n            </div>'),t.draggable({containment:"#map-id",start:function(){$(this).css({transform:"translateX(0)",bottom:"initial"})},stop:function(){this.position=K.extend({},$(this).position(),{transform:"translateX(0)",bottom:"initial",width:$(this).width(),height:$(this).height()}),K.local("toolPos",this.position)}}),this.position=K.local("toolPos")||!1,this.position&&(delete this.position.width,delete this.position.height,t.css(this.position)),$(".switch input",t).on("change",(function(){$("a",t).removeClass("underground overground").addClass($(this).val())})),K.each(sortObjByKeys(this.layers[K.mode]),(function(e,t){$('<span class="category"/>').text(e).appendTo(".outer .icons"),K.each(sortObjByKeys(t),(function(t,o){let i=o.o,s=i.type==(K.local("markerToolIcon")||"Contaminated")?"enabled":"",n=!1;K.each(K.shortcuts.QuickMarker,(function(e,t){i.type==t&&"Underground"!=i.type&&(n=e)})),K.mode in i.mode&&$("<a />",{class:"ripple-me "+s,title:e+"<br>"+i.type.replace("Survival","").space(),category:e,type:i.type,html:`<img src="${i.iconUrl}">${n?'<span class="key">'+n+"</span>":""}`}).data("properties",i).appendTo(".outer .icons")}))})),$("#marker-tools a").on("click",(function(){let e=$(this).attr("type");$(this).siblings("a").removeClass("enabled"),$(this).addClass("enabled"),K.local("markerToolIcon",e),K.updateMarker($(this).data("properties")),K.bar.draw.Marker.enable()}))}};
//# sourceMappingURL=marker.min.js.map